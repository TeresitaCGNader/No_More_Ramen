<main>
    <h1>{{title}}</h1>
    <button id='add-unit-btn'>Add New Unit</button>
    <table>
        <thead>
            <tr>
                <th>Unit ID</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            {{#each units}}
                <tr>
                    <td>{{this.unit_id}}</td>
                    <td>{{this.name}}</td>
                    <td><button class='edit-btn'>Edit</button></td>
                    <td><button class='del-btn'>Delete</button></td>
                </tr>
            {{/each}}
        </tbody>
    </table>

    <dialog id='add-unit-modal' class='modal'>
        <div class='modal-content'>
            <div class='modal-header'>
                <span>Add Unit</span>
                <span class='close'>&times;</span>
            </div>
            <form id='add-unit-form'>
                <label for='name'>Name:</label>
                <input type='text' id='unit-name' name='name' /><br />

                <input type='submit' value='Add' />
            </form>
        </div>
    </dialog>

    <dialog id='edit-unit-modal' class='modal'>
        <div class='modal-content'>
            <div class='modal-header'>
                <span>Edit Unit</span>
                <span class='close'>&times;</span>
            </div>
            <form id='edit-unit-form'>
                <input type='hidden' id='edit-unit-id' name='unit-id' />
                <label for='name'>Name:</label>
                <input type='text' id='edit-unit-name' name='name' /><br />
                <input type='submit' value='Update' />
            </form>
        </div>
    </dialog>

    <dialog id='delete-unit-modal' class='modal'>
        <div class='modal-content'>
            <div class='modal-header'>
                <span class='close'>&times;</span>
            </div>
            <div class='flex justify-center'>
                <span>Are you sure you want to delete this unit?</span>
            </div>
            <div class='flex gap justify-center'>
                <button>Cancel</button>
                <button>Confirm</button>
            </div>
        </div>
    </dialog>
</main>

<script>
// Elements
const addUnitModal = document.getElementById('add-unit-modal');
const addUnitForm = document.getElementById('add-unit-form');
const deleteUnitModal = document.getElementById('delete-unit-modal');
const editUnitModal = document.getElementById('edit-unit-modal');
const editUnitForm = document.getElementById('edit-unit-form');

let unitId;  // Variable to hold the current Unit ID.

// Event handlers
document.querySelector('#add-unit-btn').addEventListener('click', () => addUnitModal.showModal());

// Close modals when clicking 'x' or 'Cancel'
for(let modal of [addUnitModal, deleteUnitModal, editUnitModal]) {
    modal.querySelector('.close').addEventListener('click', () => modal.close());
}

// Handle all unit actions
document.addEventListener('click', event => {
    const row = event.target.closest('tr');
    if (!row) return;

    unitId = row.children[0].textContent;
    if (event.target.classList.contains('edit-btn')) {
        document.getElementById('edit-unit-name').value = row.children[1].textContent;
        editUnitModal.showModal();
    } else if (event.target.classList.contains('del-btn')) {
        deleteUnitModal.showModal();
    }
});

// Form submissions
addUnitForm.addEventListener('submit', handleCreateUnit);
editUnitForm.addEventListener('submit', handleUpdateUnit);

deleteUnitModal.querySelector('button:nth-child(1)').addEventListener('click', () => deleteUnitModal.close());
deleteUnitModal.querySelector('button:nth-child(2)').addEventListener('click', handleDeleteUnit);

// Fetch requests
async function handleCreateUnit(event) {
    event.preventDefault();

    const formData = new FormData(event.target);
    const unitData = Object.fromEntries(formData);

    await fetch('/units', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(unitData),
    });

    addUnitModal.close();
    location.reload();
}

async function handleUpdateUnit(event) {
    event.preventDefault();

    const response = await fetch(`/units/${unitId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            name: document.getElementById('edit-unit-name').value,
        }),
    });

    if (response.ok) {
        editUnitModal.close();
        location.reload();
    }
}

async function handleDeleteUnit() {
    await fetch(`/units/${unitId}`, { method: 'DELETE' });

    deleteUnitModal.close();
    location.reload();
}
</script>