<main>
    <h1>{{title}}</h1>
    <button id='add-user-btn'>Add New User</button>
    <table>
        <thead>
            <tr>
                <th>User ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            {{#each users}}
                <tr>
                    <td>{{this.user_id}}</td>
                    <td>{{this.first_name}}</td>
                    <td>{{this.last_name}}</td>
                    <td>{{this.email}}</td>
                    <td><button class='edit-btn'>Edit</button></td>
                    <td><button class='del-btn'>Delete</button></td>
                </tr>
            {{/each}}
        </tbody>
    </table>

    <dialog id='add-user-modal' class='modal'>
        <div class='modal-content'>
            <div class='modal-header'>
                <span>Add User</span>
                <span class='close'>&times;</span>
            </div>
            <form id='add-user-form'>
                <label for='name'>First Name:</label>
                <input type='text' id='first_name' name='first_name' /><br />

                <label for='name'>Last Name:</label>
                <input type='text' id='last_name' name='last_name' /><br />

                <label for='type'>Email:</label>
                <input type='text' id='email' name='email' /><br />

                <input type='submit' value='Add' />
            </form>
        </div>
    </dialog>

    <dialog id='edit-user-modal' class='modal'>
        <div class='modal-content'>
            <div class='modal-header'>
                <span>Edit User</span>
                <span class='close'>&times;</span>
            </div>
            <form id='edit-user-form'>
                <input type='hidden' id='edit-user-id' name='user-id' />
                <label for='name'>First Name:</label>
                <input type='text' id='edit-first-name' name='first-name' /><br />
                <label for='name'>Last Name:</label>
                <input type='text' id='edit-last-name' name='last-name' /><br />
                <label for='type'>Email:</label>
                <input type='text' id='edit-email' name='email' /><br />
                <input type='submit' value='Update' />
            </form>
        </div>
    </dialog>

    <dialog id='delete-user-modal' class='modal'>
        <div class='modal-content'>
            <div class='modal-header'>
                <span id='close' class='close'>&times;</span>
            </div>
            <div class='flex justify-center'>
                <span>Are you sure you want to delete this user?</span>
            </div>
            <div class='flex gap justify-center'>
                <button>Cancel</button>
                <button>Confirm</button>
            </div>
        </div>
    </dialog>
</main>
<script>
// Elements
const addUserModal = document.getElementById('add-user-modal');
const addUserForm = document.getElementById('add-user-form');
const deleteUserModal = document.getElementById('delete-user-modal');
const editUserModal = document.getElementById('edit-user-modal');
const editUserForm = document.getElementById('edit-user-form');

let userId;  // Variable to hold the current User ID.

// Event handlers
document.querySelector('#add-user-btn').addEventListener('click', () => addUserModal.showModal());

// Close modals when clicking 'x' or 'Cancel'
for(let modal of [addUserModal, deleteUserModal, editUserModal]) {
    modal.querySelector('.close').addEventListener('click', () => modal.close());
}

// Handle all user actions
document.addEventListener('click', event => {
    const row = event.target.closest('tr');
    if (!row) return;

    userId = row.children[0].textContent;
    if (event.target.classList.contains('edit-btn')) {
        document.getElementById('edit-first-name').value = row.children[1].textContent;
        document.getElementById('edit-last-name').value = row.children[2].textContent;
        document.getElementById('edit-email').value = row.children[3].textContent;
        editUserModal.showModal();
    } else if (event.target.classList.contains('del-btn')) {
        deleteUserModal.showModal();
    }
});

// Form submissions
addUserForm.addEventListener('submit', handleCreateUser);
editUserForm.addEventListener('submit', handleUpdateUser);

deleteUserModal.querySelector('button:nth-child(1)').addEventListener('click', () => deleteUserModal.close());
deleteUserModal.querySelector('button:nth-child(2)').addEventListener('click', handleDeleteUser);

// Fetch requests
async function handleCreateUser(event) {
    event.preventDefault();

    const formData = new FormData(event.target);
    const userData = Object.fromEntries(formData);

    await fetch('/users', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(userData),
    });

    addUserModal.close();
    location.reload();
}

async function handleUpdateUser(event) {
    event.preventDefault();

    const response = await fetch(`/users/${userId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            first_name: document.getElementById('edit-first-name').value,
            last_name: document.getElementById('edit-last-name').value,
            email: document.getElementById('edit-email').value,
        }),
    });

    if (response.ok) {
        editUserModal.close();
        location.reload();
    }
}

async function handleDeleteUser() {
    await fetch(`/users/${userId}`, { method: 'DELETE' });

    deleteUserModal.close();
    location.reload();
}
</script>